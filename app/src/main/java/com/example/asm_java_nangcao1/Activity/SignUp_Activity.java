package com.example.asm_java_nangcao1.Activity;import androidx.annotation.NonNull;import androidx.appcompat.app.AppCompatActivity;import android.content.Intent;import android.os.Bundle;import android.util.Log;import android.view.View;import android.widget.EditText;import android.widget.LinearLayout;import android.widget.TextView;import android.widget.Toast;import com.example.asm_java_nangcao1.Model.accout_user_Model;import com.example.asm_java_nangcao1.Model.khoHang_Model;import com.example.asm_java_nangcao1.R;import com.google.firebase.database.DataSnapshot;import com.google.firebase.database.DatabaseError;import com.google.firebase.database.DatabaseReference;import com.google.firebase.database.FirebaseDatabase;import com.google.firebase.database.ValueEventListener;import java.util.ArrayList;import java.util.Date;import java.util.UUID;public class SignUp_Activity extends AppCompatActivity {    private TextView            SignUp_tv_btn_Login,            SignUp_tv_btn_loginText;    private LinearLayout            SignUp_lv_btn_submid;    private EditText            SignUp_edt_tenNguoiDung,            SignUp_edt_tenDangNhap,            SignUp_edt_gmail,            SignUp_edt_diaChiNguoiDung,            SignUp_edt_soDienThoai,            SignUp_edt_matKhau,            SignUp_edt_xacNhanMatKhau;    String name, userName, gmail, address, numberPhone, password, repeatPassword;    String reg = "^(0|\\+84)(\\s|\\.)?((3[2-9])|(5[689])|(7[06-9])|(8[1-689])|(9[0-46-9])|(9[0-46-9]))(\\d)(\\d)(\\s|\\.)?(\\d{3})(\\s|\\.)?(\\d{3})?(\\d)$";    UUID uuidUser, uuidGioHang;    Date date;    //firebase    FirebaseDatabase database;    DatabaseReference databaseRef;    //model    ArrayList<accout_user_Model> arrayListAcoutUsser;    accout_user_Model arrAcoutUser;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_sign_up);        anhXa();        batSuKien();    }    private void batSuKien() {//     chuyển trang        SignUp_tv_btn_Login.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                Intent intent = new Intent(SignUp_Activity.this, Login_Activity.class);                startActivity(intent);            }        });        SignUp_tv_btn_loginText.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                Intent intent = new Intent(SignUp_Activity.this, Login_Activity.class);                startActivity(intent);            }        });//        check thêm tài khoản        SignUp_lv_btn_submid.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {//                kiểm tra dữ liệu đầu vào                checkValidateSet();            }        });    }    private void checkValidateSet() {        firebaseData();        name = SignUp_edt_tenNguoiDung.getText().toString().trim();        userName = SignUp_edt_tenDangNhap.getText().toString().trim();        gmail = SignUp_edt_gmail.getText().toString().trim();        address = SignUp_edt_diaChiNguoiDung.getText().toString().trim();        numberPhone = SignUp_edt_soDienThoai.getText().toString().trim().replaceAll(" ", "");        password = SignUp_edt_matKhau.getText().toString().trim();        repeatPassword = SignUp_edt_xacNhanMatKhau.getText().toString();        if (!name.equals("")) {            setNullBackgourd(SignUp_edt_tenNguoiDung);            if (!userName.equals("")) {                setNullBackgourd(SignUp_edt_tenDangNhap);                if (!(userName.length() <= 5)) {                    setNullBackgourd(SignUp_edt_tenDangNhap);                    if (!containsWhiteSpace(userName)) {                        setNullBackgourd(SignUp_edt_tenDangNhap);                        if (!address.equals("")) {                            setNullBackgourd(SignUp_edt_diaChiNguoiDung);                            if (!numberPhone.equals("")) {                                setNullBackgourd(SignUp_edt_soDienThoai);                                if (numberPhone.matches(reg)) {                                    setNullBackgourd(SignUp_edt_soDienThoai);                                    if (!password.equals("")) {                                        setNullBackgourd(SignUp_edt_matKhau);                                        if (!containsWhiteSpace(password)) {                                            setNullBackgourd(SignUp_edt_matKhau);                                            if (!repeatPassword.equals("")) {                                                setNullBackgourd(SignUp_edt_xacNhanMatKhau);                                                if (!containsWhiteSpace(repeatPassword)) {                                                    setNullBackgourd(SignUp_edt_xacNhanMatKhau);                                                    if (repeatPassword.equals(password)) {                                                        setNullBackgourd(SignUp_edt_xacNhanMatKhau);                                                        //       Mở thông báo                                                        //   kiểm tra                                                        firebaseData();                                                        //       thêm dữ liệu vào firebase//                                                    } else {                                                        error(SignUp_edt_xacNhanMatKhau, "Xác nhận mật khẩu không trùng khớp!");                                                        return;                                                    }                                                } else {                                                    error(SignUp_edt_xacNhanMatKhau, "Xác nhận mật khẩu không được có khoảng trắng!");                                                    return;                                                }                                            } else {                                                error(SignUp_edt_xacNhanMatKhau, "Xác nhận mật khẩu không được bỏ trống!");                                                return;                                            }                                        } else {                                            error(SignUp_edt_matKhau, "Mật khẩu không được có khoảng trắng!");                                            return;                                        }                                    } else {                                        error(SignUp_edt_matKhau, "Mật khẩu không được bỏ trống!");                                        return;                                    }                                } else {                                    error(SignUp_edt_soDienThoai, "Số điện thoại không không hợp lệ!");                                    return;                                }                            } else {                                error(SignUp_edt_soDienThoai, "Số điện thoại không được để trống!");                                return;                            }                        } else {                            error(SignUp_edt_diaChiNguoiDung, "Địa chỉ không được bỏ trống!");                            return;                        }                    } else {                        error(SignUp_edt_tenDangNhap, "Tên đăng nhập không được có khoảng trắng ' ' !");                        return;                    }                } else {                    error(SignUp_edt_tenDangNhap, "Tên đăng nhập không được nhỏ hơn 5 kí tự!");                    return;                }            } else {                error(SignUp_edt_tenDangNhap, "Tên đăng nhập không được để trống!");                return;            }        } else {            error(SignUp_edt_tenNguoiDung, "Tên người dùng không được để trống!");            return;        }    }    private void checkTaiKhoanTrungLap() {        int check = 0;        for (int i = 0; i < arrayListAcoutUsser.size(); i = i + 1) {            String userNameFirebase = arrayListAcoutUsser.get(i).getUserName();            if (userName.equals(userNameFirebase)) {                check = 1;            }        }        if (!(check == 1)) {            setNullBackgourd(SignUp_edt_tenDangNhap);            themTaiKhoan();        } else {            error(SignUp_edt_tenDangNhap, "Tài này đã tồn tại!");        }    }    /********************lấy dữ liệu từ firebase gán vào arrList**********************/    private void firebaseData() {        //         Gán giá trị trong firebase        database = FirebaseDatabase.getInstance("https://asmandroid-duan1-default-rtdb.asia-southeast1.firebasedatabase.app/");        databaseRef = database.getReference().child("Users");        databaseRef.addValueEventListener(new ValueEventListener() {            @Override            public void onDataChange(@NonNull DataSnapshot snapshot) {                arrayListAcoutUsser.clear();                for (DataSnapshot child : snapshot.getChildren()) {                    // gọi dữ liệu trên firebase về                    arrAcoutUser = child.getValue(accout_user_Model.class);                    // add vào listItemSanpham                    if (arrAcoutUser.getIdUser() != null) {//                        arrAcoutUser = new accout_user_Model(uuidUser.toString(), 1, name, userName, password, address, gmail, Integer.parseInt(numberPhone), date + "", 1, uuidGioHang.toString());                        arrayListAcoutUsser.add(new accout_user_Model(                                arrAcoutUser.getIdUser(),                                arrAcoutUser.getQuyen(),                                arrAcoutUser.getName(),                                arrAcoutUser.getUserName(),                                arrAcoutUser.getPassword(),                                arrAcoutUser.getDiaChi(),                                arrAcoutUser.getGmail(),                                arrAcoutUser.getSoDienThoai(),                                arrAcoutUser.getNgayTao(),                                arrAcoutUser.getTrangThai(),                                arrAcoutUser.getIdGioHang(),                                arrAcoutUser.getAvatar()));                    }                }                checkTaiKhoanTrungLap();            }            @Override            public void onCancelled(DatabaseError error) {            }        });    }    private void themTaiKhoan() {        int soDienThoai;        try {            soDienThoai = Integer.parseInt(numberPhone.replaceAll(" ", ""));            databaseRef = database.getReference("Users");            arrAcoutUser = new accout_user_Model(uuidUser.toString(), 1, name, userName, password, address, gmail, soDienThoai, date + "", 1, uuidGioHang.toString(), "");            databaseRef.child(arrAcoutUser.getIdUser()).setValue(arrAcoutUser);            Intent intent = new Intent(SignUp_Activity.this, Login_Activity.class);            Bundle bundle = new Bundle();            bundle.putString("key_userName", userName);            bundle.putString("key_password", password);            intent.putExtras(bundle);            startActivity(intent);            Toast.makeText(this, "Tạo tài khoản thành công", Toast.LENGTH_SHORT).show();        } catch (Exception e) {            Toast.makeText(this, "Lỗi số điện thoại", Toast.LENGTH_SHORT).show();        }    }    //kiểm tra khoảng trắng    public static boolean containsWhiteSpace(String line) {        boolean space = false;        if (line != null) {            for (int i = 0; i < line.length(); i++) {                if (line.charAt(i) == ' ') {                    space = true;                }            }        }        return space;    }    private void setNullBackgourd(EditText edt) {        edt.setBackgroundResource(R.drawable.broder_stroke_black);    }    private void error(EditText edt, String tv) {        edt.setError(tv);        edt.setBackgroundResource(R.drawable.broder_stroke_red_error);        edt.requestFocus();    }    private void anhXa() {//        Model        arrayListAcoutUsser = new ArrayList<>();//        date        date = java.util.Calendar.getInstance().getTime();//        key        uuidUser = UUID.randomUUID();        uuidGioHang = UUID.randomUUID();        database = FirebaseDatabase.getInstance("https://asmandroid-duan1-default-rtdb.asia-southeast1.firebasedatabase.app/");//        TextView        SignUp_tv_btn_Login = findViewById(R.id.signUp_tv_btn_Login);        SignUp_tv_btn_loginText = findViewById(R.id.signUp_tv_btn_loginText);//        LinearLayout        SignUp_lv_btn_submid = findViewById(R.id.signUp_lv_btn_submid);//        EditText        SignUp_edt_tenNguoiDung = findViewById(R.id.signUp_edt_tenNguoiDung);        SignUp_edt_tenDangNhap = findViewById(R.id.signUp_edt_tenDangNhap);        SignUp_edt_gmail = findViewById(R.id.signUp_edt_gmail);        SignUp_edt_diaChiNguoiDung = findViewById(R.id.signUp_edt_diaChiNguoiDung);        SignUp_edt_soDienThoai = findViewById(R.id.signUp_edt_soDienThoai);        SignUp_edt_matKhau = findViewById(R.id.signUp_edt_matKhau);        SignUp_edt_xacNhanMatKhau = findViewById(R.id.signUp_edt_xacNhanMatKhau);    }}